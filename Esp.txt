local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI"))()

local Window = WindUI:CreateWindow({
    Title = "Универсальный ESP/AIMBOT | SNT HUB",
    Icon = "eye",
    Author = "SnOwT",
    Folder = "SNT Hub",
    Size = UDim2.fromOffset(440, 320),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    HasOutline = true,
    KeySystem = {
        Key = { "SnowtTest", "SnowtRelease" },
        Note = "Введите ключ.",
        URL = "t.me/supreme_sigma",
        SaveKey = false,
    },
})

Window:EditOpenButton({
    Title = "Открыть UI",
    Icon = "monitor",
    CornerRadius = UDim.new(0, 10),
    StrokeThickness = 2,
    Color = ColorSequence.new(
        Color3.fromHex("FF0F7B"),
        Color3.fromHex("F89B29")
    ),
    Draggable = true,
})

local Tabs = {
    CharacterTab = Window:Tab({ Title = "Персонаж", Icon = "file-cog", Desc = "Изменение настроек вашего персонажа." }),
    EspTab = Window:Tab({ Title = "ESP", Icon = "eye", Desc = "Позволяет видеть больше чем обычно." }),
    SettingsTab = Window:Tab({ Title = "Настройки", Icon = "battery", Desc = "Различные настройки скрипта." }),
    AimbotTab = Window:Tab({ Title = "Аимбот", Icon = "axe", Desc = "Автонаводка на врагов"
    })
}

local Settings = {
    Enabled = false,
    AimKey = "RightShift",
    AimRadius = 100,
    PredictionFactor = 0.1,
    SmoothingFactor = 0.1,
    TargetPart = "Head",
    OnlyVisible = true,
    TeamCheck = false,
}

local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

local function isNumber(str)
    return tonumber(str) ~= nil or str == 'inf'
end

getgenv().HitboxSize = 15
getgenv().HitboxTransparency = 0.9
getgenv().HitboxStatus = false
getgenv().TeamCheck = false
getgenv().Walkspeed = localPlayer.Character and localPlayer.Character.Humanoid.WalkSpeed or 16
getgenv().Jumppower = localPlayer.Character and localPlayer.Character.Humanoid.JumpPower or 50
getgenv().TPSpeed = 3
getgenv().TPWalk = false
getgenv().InfJ = false

local espColor = Color3.fromRGB(255, 0, 0)
local espTransparency = 0.5
local Highlight

Window:SelectTab(1)

-- Вкладка "Персонаж"
Tabs.CharacterTab:Input({
    Title = "Изменить скорость ходьбы",
    Default = tostring(getgenv().Walkspeed),
    Placeholder = "Введите скорость ходьбы:",
    Callback = function(input)
        if isNumber(input) then
            getgenv().Walkspeed = tonumber(input)
            if localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid") then
                localPlayer.Character.Humanoid.WalkSpeed = getgenv().Walkspeed
            end
        end
    end,
})

Tabs.CharacterTab:Input({
    Title = "Изменить силу прыжка",
    Default = tostring(getgenv().Jumppower),
    Placeholder = "Введите силу прыжка:",
    Callback = function(input)
        if isNumber(input) then
            getgenv().Jumppower = tonumber(input)
             if localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid") then
                localPlayer.Character.Humanoid.JumpPower = getgenv().Jumppower
             end
        end
    end,
})

Tabs.CharacterTab:Toggle({
    Title = "Изменить хитбокс",
    Default = false,
    Callback = function(state)
        getgenv().HitboxStatus = state
        game:GetService('RunService').RenderStepped:Connect(function()
            if localPlayer and localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
                if getgenv().HitboxStatus and getgenv().TeamCheck == false then
                    for _, player in pairs(Players:GetPlayers()) do
                        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            pcall(function()
                                player.Character.HumanoidRootPart.Size = Vector3.new(getgenv().HitboxSize, getgenv().HitboxSize, getgenv().HitboxSize)
                                player.Character.HumanoidRootPart.Transparency = getgenv().HitboxTransparency
                                player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                                player.Character.HumanoidRootPart.Material = "Neon"
                                player.Character.HumanoidRootPart.CanCollide = false
                            end)
                        end
                    end
                elseif getgenv().HitboxStatus and getgenv().TeamCheck == true then
                    for _, player in pairs(Players:GetPlayers()) do
                        if localPlayer.Team ~= player.Team and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            pcall(function()
                                player.Character.HumanoidRootPart.Size = Vector3.new(getgenv().HitboxSize, getgenv().HitboxSize, getgenv().HitboxSize)
                                player.Character.HumanoidRootPart.Transparency = getgenv().HitboxTransparency
                                player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                                player.Character.HumanoidRootPart.Material = "Neon"
                                player.Character.HumanoidRootPart.CanCollide = false
                            end)
                        end
                    end
                else
                    for _, player in pairs(Players:GetPlayers()) do
                        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            pcall(function()
                                player.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                                player.Character.HumanoidRootPart.Transparency = 1
                                player.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
                                player.Character.HumanoidRootPart.Material = "Plastic"
                                player.Character.HumanoidRootPart.CanCollide = false
                            end)
                        end
                    end
                end
            end
        end)
    end,
})

Tabs.CharacterTab:Input({
    Title = "Размер хитбокса",
    Default = tostring(getgenv().HitboxSize),
    Placeholder = "Введите размер хитбокса:",
    Callback = function(input)
        if isNumber(input) then
            getgenv().HitboxSize = tonumber(input)
        end
    end,
})

-- Вкладка "ESP"
local espNameTags = {}

local function createNameTag(targetPlayer)
    local character = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
    if not character then return end

    local head = character:WaitForChild("Head")
    if not head then return end

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Name = "NameEsp"
    billboardGui.Adornee = head
    billboardGui.AlwaysOnTop = true
    billboardGui.Size = UDim2.new(0, 100, 0, 20)
    billboardGui.StudsOffsetWorldSpace = Vector3.new(0, 2, 0)

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = targetPlayer.Name
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    textLabel.TextStrokeTransparency = 0
    textLabel.TextSize = 14
    textLabel.Parent = billboardGui

    billboardGui.Parent = character
    espNameTags[targetPlayer] = billboardGui
end
local function removeNameTag(targetPlayer)
    if espNameTags and espNameTags[targetPlayer] then
        pcall(function()
            espNameTags[targetPlayer]:Destroy()
        end)
        espNameTags[targetPlayer] = nil
    end
end

local function updateNameTags(enabled, useTeamColor)
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer then
            local character = player.Character
            if character and character:FindFirstChild("Head") then
                if enabled then
                    if not espNameTags or not espNameTags[player] then
                        createNameTag(player) -- Assuming createNameTag is defined elsewhere
                    end
                     local textColor = Color3.new(1,1,1)
                    if useTeamColor then
                         textColor = (player.TeamColor == localPlayer.TeamColor) and Color3.new(0, 255, 0) or Color3.new(255,255,255)
                    end
                    local nametag = espNameTags and espNameTags[player]
                    if nametag then
                        local textLabel = nametag:FindFirstChild("TextLabel")
                        if textLabel then
                            textLabel.TextColor3 = textColor
                        end
                    end
                else
                    removeNameTag(player)
                end
            end
        end
    end
end

Tabs.EspTab:Toggle({
    Title = "ESP игроков",
    Default = false,
    Callback = function(tog)
        _G.espits = tog
        for i, v in pairs(game.Workspace:GetDescendants()) do
            if v:IsA("Model") and v:FindFirstChild("Humanoid") then
                local highlight = v:FindFirstChild("Highlight")
                if tog then
                    if not highlight then
                        Highlight = Instance.new("Highlight", v)
                        Highlight.FillColor = espColor or Color3.fromRGB(255, 0, 0)
                        Highlight.FillTransparency = espTransparency or 0.5
                    else
                        highlight.FillColor = espColor or Color3.fromRGB(255, 0, 0)
                        highlight.FillTransparency = espTransparency or 0.5
                    end
                else
                    if highlight then
                        highlight:Destroy()
                    end
                end
            end
        end
    end,
})

Tabs.EspTab:Dropdown({
    Title = "Цвет ESP",
    Values = { "Green", "Red", "Blue", "Yellow", "Pink", "Purple" },
    Value = "Red",
    Callback = function(option)
        if option == "Green" then
            espColor = Color3.fromRGB(0, 255, 0)
        elseif option == "Red" then
            espColor = Color3.fromRGB(255, 0, 0)
        elseif option == "Blue" then
            espColor = Color3.fromRGB(0, 0, 255)
        elseif option == "Yellow" then
            espColor = Color3.fromRGB(255, 255, 0)
        elseif option == "Pink" then
            espColor = Color3.fromRGB(239, 14, 216)
        elseif option == "Purple" then
            espColor = Color3.fromRGB(180, 14, 240)
        end
        if _G.espits then
            for i, v in pairs(game.Workspace:GetDescendants()) do
                if v:IsA("Model") and v:FindFirstChild("Humanoid") then
                    local highlight = v:FindFirstChild("Highlight")
                    if highlight then
                        highlight.FillColor = espColor
                    end
                end
            end
        end
    end,
})

Tabs.EspTab:Input({
    Title = "Прозрачность ESP",
    Default = "0.5",
    Placeholder = "Введите прозрачность",
    Callback = function(input)
        local value = tonumber(input)
        if typeof(value) == "number" then
            espTransparency = math.clamp(value, 0, 1)
            if Highlight then
                Highlight.FillTransparency = espTransparency
            end
            if _G.espits then
                for i, v in pairs(game.Workspace:GetDescendants()) do
                    if v:IsA("Model") and v:FindFirstChild("Humanoid") then
                        local highlight = v:FindFirstChild("Highlight")
                        if highlight then
                            highlight.FillTransparency = espTransparency
                        end
                    end
                end
            end
        end
    end,
})

Tabs.EspTab:Toggle({
    Title = "ESP имена игроков",
    Default = false,
    Callback = function(enabled)
        nameTagsEnabled = enabled -- Assuming nameTagsEnabled is a global variable
        updateNameTags(enabled, false)
    end,
})

Tabs.EspTab:Toggle({
    Title = "ESP команд",
    Default = false,
    Callback = function(Tesp)
        updateNameTags(Tesp, true)
    end
})

-- Обновление ESP при добавлении/удалении игрока и загрузке чанка
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        wait(0.5)
        if _G.espits then
            for i, v in pairs(game.Workspace:GetDescendants()) do
                if v:IsA("Model") and v:FindFirstChild("Humanoid") then
                    local highlight = v:FindFirstChild("Highlight")
                    if not highlight then
                        Highlight = Instance.new("Highlight", v)
                        Highlight.FillColor = espColor or Color3.fromRGB(255, 0, 0)
                        Highlight.FillTransparency = espTransparency or 0.5
                    else
                        highlight.FillColor = espColor or Color3.fromRGB(255, 0, 0)
                        highlight.FillTransparency = espTransparency or 0.5
                    end
                end
            end
        end
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    removeNameTag(player)
    if _G.espits then
        for i, v in pairs(game.Workspace:GetDescendants()) do
            if v:IsA("Model") and v:FindFirstChild("Humanoid") then
                local highlight = v:FindFirstChild("Highlight")
                if highlight then
                    highlight:Destroy()
                end
            end
        end
    end
end)

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager") -- Может потребоваться

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Settings = {
    Enabled = false,
    AimRadius = 50,
    TargetPart = "Head",
    SmoothingFactor = 0.2,
    ActivationTouch = "RightThumb" -- Пример: "LeftThumb", "RightThumb"
}

-- // UI (WindUI) - аналогично ПК версии, но без настроек клавиши

-- // Функция поиска ближайшего игрока (аналогично ПК версии)
local function getClosestMobileTarget()
    -- ... (логика поиска ближайшего игрока) ...
    return closestTarget, targetPart
end

local lastTargetPosition = nil
local currentCameraCF = nil

-- // Функция для плавной коррекции угла камеры
local function smoothLookAt(lookVector)
    if not currentCameraCF then
        currentCameraCF = Camera.CFrame
    end
    local targetCF = CFrame.lookAt(Camera.CFrame.Position, Camera.CFrame.Position + lookVector)
    currentCameraCF = currentCameraCF:Lerp(targetCF, Settings.SmoothingFactor)
    Camera.CFrame = currentCameraCF
end

RunService.RenderStepped:Connect(function()
    if Settings.Enabled and UserInputService:IsTouchDown(Enum.UserInputType[Settings.ActivationTouch]) then
        local target, targetPart = getClosestMobileTarget()
        if target and targetPart then
            local targetPosition = targetPart.Position
            local lookVector = (targetPosition - Camera.CFrame.Position).Unit
            smoothLookAt(lookVector)
            lastTargetPosition = targetPosition
        else
            currentCameraCF = nil
            lastTargetPosition = nil
        end
    else
        currentCameraCF = nil
        lastTargetPosition = nil
    end
end)

Tabs.AimbotTab:Toggle({
    Title = "Enable mobile aimbot",
    Default = false,
    Callback = function(State)
        
end
})

Tabs.AimbotTab:Toggle({
    Title = "Enable Aimbot",
    Default = false,
    Callback = function(state)
        Settings.Enabled = state
        if state == true then
            getClosestPlayer()
            aimAtTarget(target)
        end
end
})

Tabs.AimbotTab:Dropdown({
    Title = "Activation Key",
    Values = {"LeftShift", "RightShift", "E", "Q", "MouseButton1", "MouseButton2"},
    Value = "RightShift",
    Callback = function(key)
        Settings.AimKey = key
    end
})

Tabs.AimbotTab:Slider({
    Title = "Aim Radius",
    Value = {
        Min = 10,
        Max = 200,
        Default = 50,
    },
    Callback = function(radius)
        Settings.AimRadius = radius
    end
})

Tabs.AimbotTab:Toggle({
    Title = "Enable Prediction",
    Default = false,
    Callback = function(state)
        Settings.Prediction = state
    end
})

local function getClosestPlayer()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    if not LocalPlayer or not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    local LocalRootPart = LocalPlayer.Character.HumanoidRootPart
    local closestTarget = nil
    local closestDistance = Settings.AimRadius

    for i, Player in pairs(Players:GetPlayers()) do
        if Player ~= LocalPlayer and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character:FindFirstChild("Humanoid").Health > 0 then
            local TargetRootPart = Player.Character.HumanoidRootPart
            local Distance = (LocalRootPart.Position - TargetRootPart.Position).Magnitude
            if Distance < closestDistance and not Player.Character:FindFirstChild("ForceField") then
                closestDistance = Distance
                closestTarget = Player
            end
        end
    end
    return closestTarget
end

local function aimAtTarget(target)
    local LocalPlayer = game:GetService("Players").LocalPlayer
    if not LocalPlayer or not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") or not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    local LocalRootPart = LocalPlayer.Character.HumanoidRootPart
    local TargetRootPart = target.Character.HumanoidRootPart
    local Camera = workspace.CurrentCamera

    local targetScreenPosition = Camera:WorldToViewportPoint(TargetRootPart.Position)
    local viewportSize = game:GetService("GuiService").GetGuiInset().Y

    if targetScreenPosition then
        local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, (Camera.ViewportSize.Y - viewportSize) / 2)
        local delta = Vector2.new(targetScreenPosition.X, targetScreenPosition.Y) - screenCenter
        local sensitivity = 0.01 -- Adjust for smoother aiming

        mousemoverel(delta.X * sensitivity, delta.Y * sensitivity)
    end
end

game:GetService("RunService").RenderStepped:Connect(function()
    if Settings.Enabled then
        local inputService = game:GetService("UserInputService")
        local isKeyPressed = false
        local key = Settings.AimKey

        if key == "MouseButton1" then
            isKeyPressed = inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
        elseif key == "MouseButton2" then
            isKeyPressed = inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2)
        else
            isKeyPressed = inputService:IsKeyDown(Enum.KeyCode[key])
        end

        if isKeyPressed then
            local target = getClosestPlayer()
            if target then
                aimAtTarget(target)
            end
        end
    end
end)

-- Вкладка "Настройки"
Tabs.SettingsTab:Toggle({
    Title = "Включить/Выключить NoClip",
    Default = false,
    Callback = function(Noclip)
        if Noclip then
            getgenv().Clip = false
            if localPlayer.Character then
                for _, v in pairs(localPlayer.Character:GetDescendants()) do
                    if v:IsA('BasePart') and v.CanCollide and v.Name ~= "HumanoidRootPart" then
                        v.CanCollide = false
                    end
                end
            end
        else
            getgenv().Clip = true
            if localPlayer.Character then
                for _, v in pairs(localPlayer.Character:GetDescendants()) do
                    if v:IsA('BasePart') and not v:IsA("Accessory") and v.Name ~= "HumanoidRootPart" then
                        v.CanCollide = true
                    end
                end
            end
        end
    end
})

Tabs.SettingsTab:Toggle({
    Title = "Бесконечный прыжок",
    Default = false,
    Callback = function(s)
        getgenv().InfJ = s
        game:GetService("UserInputService").JumpRequest:Connect(function()
            if getgenv().InfJ and localPlayer.Character and localPlayer.Character:FindFirstChildOfClass'Humanoid' then
                localPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
            end
        end)
    end
})

Tabs.SettingsTab:Button({
    Title = "Переподключиться",
    Desc = "Переподключает к серверу",
    Callback = function()
        game:GetService("TeleportService"):Teleport(game.PlaceId, localPlayer)
    end
})
